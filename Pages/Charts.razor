@page "/charts"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks 
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Data 
@using BapBlazor.Data
@using Newtonsoft.Json 
 

@* Injecting HttpClient to link BapAPI and Navigation Manager to navigate through Blazor app *@
@inject HttpClient client
@inject NavigationManager NavManager

@* Div containers to show Title of page and Chart number*@
<div class="row justify-content-center">
<h1>Charts Showing Data Analysis Trends</h1>
</div>

<div class="row justify-content-center">
<h2>Chart Number 1</h2>
</div>
 
@* Syncfusion.Blazor Display Chart *@
<SfChart Title="Chart showing Number of Downloads in First 10 Apps">
    
    <ChartPrimaryXAxis Title="Category" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Maximum="10" Minimum="1" Interval="1"/>
    <ChartPrimaryYAxis Title="Number of People" RangePadding="ChartRangePadding.Normal" Minimum="500" Maximum="800"/>
    <ChartTooltipSettings Enable="true" />
    <ChartSeriesCollection>
        <ChartSeries DataSource="@StoreApps" XName="Name" YName="People" Type="ChartSeriesType.Column">
        
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

@* Navigation Button to move forward to Chart2.razor *@
<div class="row justify-content-center">
<button type="button" class="btn btn-primary" @onclick="@Navigate">Next Chart</button>
</div>



@code {

    // Fetching Dataset from BapAPI
    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }

    //Navigate method to move forward
    protected void Navigate()
    {
        NavManager.NavigateTo("charts2");
    }





}


