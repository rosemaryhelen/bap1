@page "/fetchstoreapps"

@using System.Net.Http

@inject HttpClient client
   

@using Newtonsoft.Json
@using Data 

@*Page background styling*@
<div class="container-fluid" style="background-color:ivory">

    @*Header styling*@
    <div class="row justify-content-center" style="margin-bottom:50px">
        <h1 class="text-center" style="color:cadetblue">Microsoft Store Apps:<br />First Ten Records</h1>
       
    </div>

    <div class="row" style="margin:25px;">

        @*If statement to check if data is null & if not null, populate the table*@
        @if (StoreApps != null)
        {
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Rating</th>
                        <th>People</th>
                        <th>Category</th>
                        <th>Date</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var storeapp in StoreApps)
                    {
                    
                        <tr class="justify-content-center">
                            <td>@storeapp.Id</td>
                            <td>@storeapp.Name</td>
                            <td>@storeapp.Rating</td>
                            <td>@storeapp.People</td>
                            <td>@storeapp.Category</td>
                            <td>@storeapp.Date</td>
                            <td>@storeapp.Price</td>

                        </tr>
                    }
                </tbody>
            </table>
        }
        @*If data is null show 'no records to show'*@
       @if (!StoreApps.Any())
        {
            <div class="justify-content-center">
                <h5>No records to show</h5>
            </div>
        }
    </div>

</div>

@code {

    //Fetching and returning the first 10 records
    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    protected override async Task OnInitializedAsync()
    {
        var apiName = "api/StoreApps/FirstTen";
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}
