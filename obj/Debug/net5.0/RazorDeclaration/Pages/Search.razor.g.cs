// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BapBlazor.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 2 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using BapBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using BapBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Student\source\repos\bap1\_Imports.razor"
using Syncfusion.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Student\source\repos\bap1\Pages\Search.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Student\source\repos\bap1\Pages\Search.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Student\source\repos\bap1\Pages\Search.razor"
using Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Student\source\repos\bap1\Pages\Search.razor"
using Microsoft.Extensions.Logging;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/search")]
    public partial class Search : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 81 "C:\Users\Student\source\repos\bap1\Pages\Search.razor"
       
    //new instance of obj.
    public SearchModel searchModel = new();

    //new List 
    public List<StoreApp> StoreApps = new List<StoreApp>();

    //if form entry is valid as per validation rule, run this method.
    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");
        Logger.LogInformation(searchModel.Name);

    }

    //method to call search method with user input as parameter
    private async void EnterUserInput()
    {
        await GetSearch(searchModel.Name);
    }

    //use Http client to give API a GET request using the apiName to call correct HttpGet method
    string responseBody = "";

    //string search = searchModel.Name 
    public async Task GetSearch(string search)
    {
        //apiName to be passed to in GET method
        var apiName = "api/StoreApps/";
        //append search onto end of apiName. Target -> api/StoreApps/{search}
        apiName += search;
        //use Http client to give API a GET request using the apiName to call correct HttpGet method 
        var httpResponse = await client.GetAsync(apiName);

        //returns status 200
        if (httpResponse.IsSuccessStatusCode)
        {
            //if status 200, read the content of the GET method and store as a string in responseBody
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            //populate the StoreApps list with the content of from the response body
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            //re-renders state so that another action can be performed
            StateHasChanged();
        }

    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILogger<Search> Logger { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient client { get; set; }
    }
}
#pragma warning restore 1591
